# Generated by Django 3.2 on 2021-04-15 19:35

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('city', '0001_initial'),
        ('common', '0006_auto_20210415_1935'),
        ('blog', '0019_auto_20210415_1935'),
        ('users', '0008_auto_20210213_1534'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='user',
            name='b_avatar',
        ),
        migrations.AddField(
            model_name='user',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='city.city', verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='user',
            name='level',
            field=models.PositiveSmallIntegerField(default=1, verbose_name='Уровень'),
        ),
        migrations.AddField(
            model_name='user',
            name='point',
            field=models.PositiveIntegerField(default=0, verbose_name='Количество кармы'),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone',
            field=models.CharField(default='', max_length=17, unique=True, verbose_name='Телефон'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='UserTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('NOR', 'Не указано'), ('PAY', 'Оплата'), ('ADD', 'Пополнение'), ('AUP', 'Автоплатёж'), ('PEN', 'Штраф')], default='NOR', max_length=5, verbose_name='Причина изменения счета')),
                ('value', models.PositiveIntegerField(default=0, verbose_name='Сумма транзакции')),
                ('total', models.PositiveIntegerField(default=0, verbose_name='Остаток')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='UserPrivate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.BooleanField(default=False, verbose_name='Город виден всем')),
                ('networks', models.BooleanField(default=True, verbose_name='Соцсети открыты')),
                ('old', models.BooleanField(default=True, verbose_name='Возраст открыт')),
                ('subscribers', models.BooleanField(default=True, verbose_name='Подписки открыты')),
                ('other', models.BooleanField(default=True, verbose_name='Образование/сфера занятости открыты')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_private', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Настройка приватности пользователя',
                'verbose_name_plural': 'Настройки приватности пользователя',
            },
        ),
        migrations.CreateModel(
            name='UserNotifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.BooleanField(default=True, verbose_name='Комментарии на мои активности')),
                ('reaction', models.BooleanField(default=True, verbose_name='Реакции на мои активности')),
                ('comment_reaction', models.BooleanField(default=True, verbose_name='Реакции на мои комментарии')),
                ('reply', models.BooleanField(default=True, verbose_name='Ответы на мои активности')),
                ('admin', models.BooleanField(default=True, verbose_name='Административные уведомления')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_notify', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Настройка уведомдений пользователя',
                'verbose_name_plural': 'Настройки уведомдений пользователя',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education', models.CharField(choices=[('NOV', 'Не выбрано'), ('EDH', 'Высшее образование'), ('EDM', 'Среднее специальное'), ('EDL', 'Среднее')], default='NOV', max_length=5, verbose_name='Образование')),
                ('employment', models.CharField(choices=[('NOV', 'Не выбрано'), ('EDU', 'Образование'), ('MED', 'Медицина'), ('IT', 'IT')], default='NOV', max_length=5, verbose_name='Сфера занятости')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_info', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Информация о пользователе',
                'verbose_name_plural': 'Информация о пользователях',
            },
        ),
        migrations.CreateModel(
            name='UserCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.BooleanField(default=False, verbose_name='Почта указана')),
                ('profile_info', models.BooleanField(default=False, verbose_name='О себе заполнено')),
                ('elect_new', models.BooleanField(default=False, verbose_name='Активность написана')),
                ('comment', models.BooleanField(default=False, verbose_name='Комментарий написан')),
                ('reaction', models.BooleanField(default=False, verbose_name='Реакция совершена')),
                ('quard', models.BooleanField(default=False, verbose_name='Плохой контент найден')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_check', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Проверка действий пользователя',
                'verbose_name_plural': 'Проверки действий пользователей',
            },
        ),
        migrations.CreateModel(
            name='UserBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blocked_user', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by_users', to=settings.AUTH_USER_MODEL, verbose_name='Кого блокирует')),
                ('blocker', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_blocks', to=settings.AUTH_USER_MODEL, verbose_name='Кто блокирует')),
            ],
        ),
        migrations.CreateModel(
            name='Bookmarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog', models.ManyToManyField(blank=True, related_name='blog_bookmarks', to='blog.Blog')),
                ('blog_comment', models.ManyToManyField(blank=True, related_name='blog_comment_bookmarks', to='common.BlogComment')),
                ('new', models.ManyToManyField(blank=True, related_name='new_bookmarks', to='blog.ElectNew')),
                ('new_comment', models.ManyToManyField(blank=True, related_name='new_comment_bookmarks', to='common.ElectNewComment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_bookmarks', to=settings.AUTH_USER_MODEL, verbose_name='Избранное')),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранное',
            },
        ),
        migrations.AddIndex(
            model_name='usertransaction',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='users_usert_created_481d40_brin'),
        ),
        migrations.AlterIndexTogether(
            name='userprivate',
            index_together={('id', 'user')},
        ),
        migrations.AlterIndexTogether(
            name='usernotifications',
            index_together={('id', 'user')},
        ),
        migrations.AddIndex(
            model_name='userblock',
            index=models.Index(fields=['blocked_user', 'blocker'], name='users_userb_blocked_ab1a4e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userblock',
            unique_together={('blocked_user', 'blocker')},
        ),
    ]
