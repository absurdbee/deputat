# Generated by Django 3.2 on 2021-04-15 19:35

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('notify', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='notify',
            name='options',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Доп. поле, например регионы'),
        ),
        migrations.AlterField(
            model_name='notify',
            name='verb',
            field=models.CharField(choices=[('ITE', ' разместил'), ('COM', ' оставил'), ('WCOM', ' оставила'), ('GCOM', ' оставили'), ('REP', ' ответил на'), ('WREP', ' ответила на'), ('GREP', ' ответили на'), ('LIK', ' оценил'), ('WLIK', ' оценила'), ('GLIK', ' оценили'), ('DIS', ' не оценил'), ('WDIS', ' не оценила'), ('GDIS', ' не оценили'), ('INS', ' считает, что'), ('WINS', ' считает, что'), ('GINS', ' считает, что'), ('LCO', ' оценил'), ('WLCO', ' оценила '), ('GLCO', ' оценили'), ('LRE', ' оценил'), ('WLRE', ' оценила'), ('GLRE', ' оценили'), ('SVO', ' участвовал в опросе'), ('WSVO', ' участвовала в опросе'), ('GSVO', ' участвовали в опросе'), ('CRE', ' подал заявку в'), ('WCRE', ' подала заявку в'), ('GCRE', ' подали заявку в'), ('CCO', ' принят в'), ('WCCO', ' принята'), ('GCCO', ' приняты'), ('REG', ' зарегистрировался'), ('WREG', ' зарегистрировалась'), ('GREG', ' зарегистрировались')], max_length=5, verbose_name='Тип уведомления'),
        ),
        migrations.CreateModel(
            name='Wall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('verb', models.CharField(choices=[('ITE', ' разместил'), ('COM', ' оставил'), ('WCOM', ' оставила'), ('GCOM', ' оставили'), ('REP', ' ответил на'), ('WREP', ' ответила на'), ('GREP', ' ответили на'), ('LIK', ' оценил'), ('WLIK', ' оценила'), ('GLIK', ' оценили'), ('DIS', ' не оценил'), ('WDIS', ' не оценила'), ('GDIS', ' не оценили'), ('INS', ' считает, что'), ('WINS', ' считает, что'), ('GINS', ' считает, что'), ('LCO', ' оценил'), ('WLCO', ' оценила '), ('GLCO', ' оценили'), ('LRE', ' оценил'), ('WLRE', ' оценила'), ('GLRE', ' оценили'), ('SVO', ' участвовал в опросе'), ('WSVO', ' участвовала в опросе'), ('GSVO', ' участвовали в опросе'), ('CRE', ' подал заявку в'), ('WCRE', ' подала заявку в'), ('GCRE', ' подали заявку в'), ('CCO', ' принят в'), ('WCCO', ' принята'), ('GCCO', ' приняты'), ('REG', ' зарегистрировался'), ('WREG', ' зарегистрировалась'), ('GREG', ' зарегистрировались')], max_length=5, verbose_name='Тип уведомления')),
                ('status', models.CharField(choices=[('U', 'Не прочитано'), ('R', 'Прочитано'), ('D', 'Удалено')], default='U', max_length=1, verbose_name='Статус')),
                ('attach', models.CharField(max_length=30, verbose_name='Объект')),
                ('options', models.CharField(blank=True, max_length=200, null=True, verbose_name='Доп. поле, например регионы')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('object_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='notify.wall', verbose_name='Например, несколько человек лайкает пост. Нужно для группировки')),
                ('user_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='notify.wall', verbose_name='Например, человек лайкает несколько постов. Нужно для группировки')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-created'],
            },
        ),
        migrations.AddIndex(
            model_name='wall',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='notify_wall_created_656667_brin'),
        ),
    ]
